<UserControl x:Class="RestRunner.Views.Pages.CommandPageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:models="clr-namespace:RestRunner.Views.Models"
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:localcontrols="clr-namespace:RestRunner.Controls"
             xmlns:conv="clr-namespace:RestRunner.Converters"
             xmlns:helpers="clr-namespace:RestRunner.Helpers"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:behaviors="clr-namespace:RestRunner.Behaviors"
             xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             mc:Ignorable="d" 
             d:DesignWidth="1366" d:DesignHeight="768"
             DataContext="{Binding Command, Source={StaticResource Locator}}">
    
    <UserControl.Resources>
        <CollectionViewSource x:Key="CommandsViewSource" Source="{Binding Commands}">
            <CollectionViewSource.SortDescriptions>
                <componentModel:SortDescription PropertyName="Category"/>
                <componentModel:SortDescription PropertyName="Label"/>
            </CollectionViewSource.SortDescriptions>
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Category"/>
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
        <conv:BoolToOpacityConverter x:Key="BoolToOpacityConverter" />
        <conv:IntToVisibilityConverter x:Key="IntToVisibilityConverter" />
        <conv:IntToVisibilityInverseConverter x:Key="IntToVisibilityInverseConverter" />
        <conv:HttpVerbToBrushConverter x:Key="HttpVerbToBrushConverter" />
        <conv:MultiBoolOrVisibilityConverter x:Key="MultiBoolOrVisibilityConverter" />
        <conv:SubstringConverter x:Key="SubstringConverter" />
        <conv:TimeSpanToStringConverter x:Key="TimeSpanToStringConverter" />
    </UserControl.Resources>
    
    <Grid helpers:AccessKeyScoper.IsAccessKeyScope="True">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="6*"/>
            <ColumnDefinition Width="10"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!--Command List-->
        <ListView Grid.RowSpan="2" Background="{StaticResource HighlightBrush}" ItemsSource="{Binding Source={StaticResource CommandsViewSource}}" SelectedItem="{Binding SelectedCommand, Mode=TwoWay}" Margin="0" Padding="0,0,0,10" BorderThickness="0">
            <ListView.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Expander Header="{Binding Name.Name}" IsExpanded="{Binding Name.IsExpanded}" MinWidth="300">
                                            <Expander.HeaderTemplate>
                                                <DataTemplate>
                                                    <DockPanel>
                                                        <Button DockPanel.Dock="Right" Margin="0,-4" Style="{DynamicResource RrMetroCircleButtonStyle}" Width="25" Height="25"
                                                                Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListView},Path=DataContext.EditCategoryCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Expander},Path=DataContext.Name}">
                                                            <Rectangle Width="12" Height="12">
                                                                <Rectangle.Fill>
                                                                    <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_edit_white}" />
                                                                </Rectangle.Fill>
                                                            </Rectangle>
                                                        </Button>
                                                        <Button DockPanel.Dock="Right" Margin="0,-4" Style="{DynamicResource RrMetroCircleButtonStyle}" Width="25" Height="25"
                                                                Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListView},Path=DataContext.AddCommandToCategoryCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Expander},Path=DataContext.Name}">
                                                            <Rectangle Width="12" Height="12">
                                                                <Rectangle.Fill>
                                                                    <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_add_white}" />
                                                                </Rectangle.Fill>
                                                            </Rectangle>
                                                        </Button>
                                                        <TextBlock DockPanel.Dock="Left" Text="{Binding}" Foreground="{StaticResource WhiteBrush}"></TextBlock>
                                                    </DockPanel>
                                                </DataTemplate>
                                            </Expander.HeaderTemplate>
                                            <ItemsPresenter />
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </ListView.GroupStyle>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding Verb, Converter={StaticResource SubstringConverter}, ConverterParameter=1}"
                                   Foreground="{Binding Verb, Converter={StaticResource HttpVerbToBrushConverter}}" Width="8" FontWeight="Bold" Margin="5,0" />
                        <TextBlock Name="txbCommandLabel" Grid.Column="1" Text="{Binding Label}" MaxWidth="300" TextWrapping="Wrap" Foreground="{StaticResource WhiteBrush}"/>
                        <StackPanel Name="spOverlay" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" Background="#0FFF" >
                            <StackPanel.Opacity>
                                <Binding Converter="{StaticResource BoolToOpacityConverter}" ElementName="spOverlay" Path="IsMouseOver" />
                            </StackPanel.Opacity>
                            <StackPanel.Visibility>
                                <MultiBinding Converter="{StaticResource MultiBoolOrVisibilityConverter}">
                                    <Binding ElementName="txbCommandLabel" Path="IsMouseOver" />
                                    <Binding ElementName="spOverlay" Path="IsMouseOver" />
                                </MultiBinding>
                            </StackPanel.Visibility>
                            <Button Style="{DynamicResource RrMetroCircleButtonStyle}" Width="25" Height="25" Background="{StaticResource AccentColorBrush2}"
                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListView},Path=DataContext.CloneCommandCommand}" CommandParameter="{Binding }">
                                <Rectangle Width="12" Height="12">
                                    <Rectangle.Fill>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_page_copy_white}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Button>
                            <Button Style="{DynamicResource RrMetroCircleButtonStyle}" Width="25" Height="25" Background="{StaticResource AccentColorBrush2}"
                                    Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListView},Path=DataContext.RemoveCommandCommand}" CommandParameter="{Binding }">
                                <Rectangle Width="12" Height="12">
                                    <Rectangle.Fill>
                                        <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_delete_white}" />
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Button>
                            <!--<VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_edit}" />
                                <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_close}" />
                                <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_add}" />-->
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <Button Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="10" Style="{DynamicResource RrMetroCircleButtonStyle}" Width="34" Height="34" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                Command="{Binding AddCategoryCommand}">
            <Rectangle Width="26" Height="20">
                <Rectangle.Fill>
                    <VisualBrush Stretch="Uniform" Visual="{StaticResource appbar_add_white}" />
                </Rectangle.Fill>
            </Rectangle>
        </Button>

        <!--Selected Command-->
        <Grid Grid.Column="2" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <TextBlock Text="{Binding SelectedCommand.Label}" FontSize="{DynamicResource WindowTitleFontSize}" Margin="0,-5,0,5" />

            <models:RestCommand Grid.Row="1" DataContext="{Binding SelectedCommand}"></models:RestCommand>

            <!--Environment Variables-->
            <GroupBox Grid.Row="2" Header="Environment Values" Margin="0">
                <localcontrols:CaptionedKeyValuePairEditGrid Items="{Binding EnvironmentVariables}" KeyWatermark="Name" ValueWatermark="Value" />
            </GroupBox>
        </Grid>
        <DockPanel Grid.Column="2" Grid.Row="1" LastChildFill="False">
            <Button DockPanel.Dock="Left" HorizontalAlignment="Left" Command="{Binding ExecuteSelectedCommandCommand}" MinWidth="75" Margin="0,10,0,10" IsDefault="True" Style="{DynamicResource AccentedSquareButtonStyle}">Submit</Button>
            <Button DockPanel.Dock="Left" HorizontalAlignment="Left" Command="{Binding CancelCommandCommand}" MinWidth="75" Margin="10,10,0,10" Style="{DynamicResource SquareButtonStyle}">Cancel</Button>
            <controls:DropDownButton DockPanel.Dock="Left" Content="Submit Multiple" ItemsSource="{Binding ExecuteMultipleCommands}" DisplayMemberPath="Caption" MinWidth="75" Margin="10,10,0,10" >
                <controls:DropDownButton.ItemContainerStyle>
                    <Style TargetType="MenuItem">
                        <Setter Property="Command" Value="{Binding Path=Command}"/>
                    </Style>
                </controls:DropDownButton.ItemContainerStyle>
            </controls:DropDownButton>

            <StackPanel Orientation="Horizontal" Visibility="{Binding MultipleExecutionProgress, Converter={StaticResource IntToVisibilityInverseConverter}, ConverterParameter=-1}">
                <TextBlock Text="{Binding MultipleExecutionProgress}" Margin="10,0,0,0" VerticalAlignment="Center"/>
                <TextBlock Text="{Binding BusyDuration, Converter={StaticResource TimeSpanToStringConverter}}" Margin="10,0,0,0" VerticalAlignment="Center"/>
            </StackPanel>
            <TextBlock Text="{Binding BusyDuration, Converter={StaticResource TimeSpanToStringConverter}, ConverterParameter=true}" Margin="10,0,0,0" VerticalAlignment="Center"
                       Visibility="{Binding MultipleExecutionProgress, Converter={StaticResource IntToVisibilityConverter}, ConverterParameter=-1}"/>
        </DockPanel>

        <!--Result List-->
        <ListView Grid.Column="4" Grid.Row="0" Margin="0" ItemsSource="{Binding Results}" SelectedItem="{Binding Result}" BorderThickness="0">
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border
                        BorderBrush="Transparent"
                        BorderThickness="0"
                        Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="Auto" Margin="0" Content="{TemplateBinding Content}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <i:Interaction.Behaviors>
                <behaviors:ScrollIntoViewBehavior />
            </i:Interaction.Behaviors>
        </ListView>

        <!--Results Buttons-->
        <DockPanel Grid.Column="4" Grid.Row="1" LastChildFill="False">
            <Button DockPanel.Dock="Right" Command="{Binding CopyResultsToClipboardCommand}" MinWidth="75" Margin="10,10,0,10" Style="{DynamicResource SquareButtonStyle}">Copy Results</Button>
            <Button DockPanel.Dock="Right" Command="{Binding ClearResultsCommand}" MinWidth="75" Margin="0,10,0,10" Style="{DynamicResource SquareButtonStyle}">Clear Results</Button>
        </DockPanel>

        <!--Progress Indicator-->
        <controls:ProgressRing Grid.Column="4" Grid.Row="0" IsActive="{Binding IsBusy}"
                               HorizontalAlignment="Center" VerticalAlignment="Center"/>
    </Grid>
</UserControl>
